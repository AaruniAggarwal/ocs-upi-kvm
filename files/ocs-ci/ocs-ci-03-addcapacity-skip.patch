diff --git a/tests/manage/z_cluster/cluster_expansion/test_add_capacity_entry_exit_criteria.py b/tests/manage/z_cluster/cluster_expansion/test_add_capacity_entry_exit_criteria.py
index 0d38d116..52f0e7a2 100644
--- a/tests/manage/z_cluster/cluster_expansion/test_add_capacity_entry_exit_criteria.py
+++ b/tests/manage/z_cluster/cluster_expansion/test_add_capacity_entry_exit_criteria.py
@@ -1,6 +1,10 @@
 import logging
 from concurrent.futures import ThreadPoolExecutor
 import pytest
+from ocs_ci.framework.pytest_customization.marks import (
+    skipif_ibm_power,
+)
+

 from ocs_ci.ocs.cluster import is_flexible_scaling_enabled
 from ocs_ci.ocs.ocp import OCP
@@ -31,6 +35,7 @@ logger = logging.getLogger(__name__)
 )
 @ignore_leftovers
 @tier2
+@skipif_ibm_power
 @pytest.mark.skipif(
     config.ENV_DATA["platform"].lower() == constants.VSPHERE_PLATFORM,
     reason=(

diff --git a/tests/manage/z_cluster/cluster_expansion/test_add_capacity_with_node_restart.py b/tests/manage/z_cluster/cluster_expansion/test_add_capacity_with_node_restart.py
index 86502d2d..27aaea16 100644
--- a/tests/manage/z_cluster/cluster_expansion/test_add_capacity_with_node_restart.py
+++ b/tests/manage/z_cluster/cluster_expansion/test_add_capacity_with_node_restart.py
@@ -1,6 +1,10 @@
 import pytest
 import logging

+from ocs_ci.framework.pytest_customization.marks import (
+    skipif_ibm_power,
+)
+
 from ocs_ci.framework.testlib import ignore_leftovers, ManageTest, tier4b
 from ocs_ci.framework import config
 from ocs_ci.ocs import constants
@@ -28,6 +32,7 @@ logger = logging.getLogger(__name__)
 )
 @ignore_leftovers
 @tier4b
+@skipif_ibm_power
 class TestAddCapacityNodeRestart(ManageTest):
     """
     Test add capacity when one of the worker nodes got restart
diff --git a/tests/manage/z_cluster/cluster_expansion/test_delete_pod.py b/tests/manage/z_cluster/cluster_expansion/test_delete_pod.py
index f48908e3..ed82da2e 100644
--- a/tests/manage/z_cluster/cluster_expansion/test_delete_pod.py
+++ b/tests/manage/z_cluster/cluster_expansion/test_delete_pod.py
@@ -2,6 +2,9 @@ import pytest

 import logging
 from concurrent.futures import ThreadPoolExecutor
+from ocs_ci.framework.pytest_customization.marks import (
+    skipif_ibm_power,
+)

 from ocs_ci.framework.testlib import ignore_leftovers, tier4c
 from ocs_ci.framework import config
@@ -22,6 +25,7 @@ logger = logging.getLogger(__name__)

 @ignore_leftovers
 @tier4c
+@skipif_ibm_power
 class TestAddCapacityWithResourceDelete:
     """
     Test add capacity when one of the resources gets deleted
diff --git a/tests/manage/z_cluster/cluster_expansion/test_node_expansion.py b/tests/manage/z_cluster/cluster_expansion/test_node_expansion.py
index 30a09938..58f22ec7 100644
--- a/tests/manage/z_cluster/cluster_expansion/test_node_expansion.py
+++ b/tests/manage/z_cluster/cluster_expansion/test_node_expansion.py
@@ -6,6 +6,7 @@ from ocs_ci.framework.pytest_customization.marks import (
     skipif_flexy_deployment,
     skipif_ibm_flash,
     skipif_managed_service,
+    skipif_ibm_power,
 )
 
 logger = logging.getLogger(__name__)
@@ -17,6 +18,7 @@ logger = logging.getLogger(__name__)
 @skipif_ibm_flash
 @ignore_leftovers
 @tier1
+@skipif_ibm_power
 class TestAddNode(ManageTest):
     """
     Automates adding worker nodes to the cluster while IOs
diff --git a/tests/manage/z_cluster/cluster_expansion/test_verify_ceph_csidriver_runs_on_non_ocs_nodes.py b/tests/manage/z_cluster/cluster_expansion/test_verify_ceph_csidriver_runs_on_non_ocs_nodes.py
index 75278d60..8d8e2cbc 100644
--- a/tests/manage/z_cluster/cluster_expansion/test_verify_ceph_csidriver_runs_on_non_ocs_nodes.py
+++ b/tests/manage/z_cluster/cluster_expansion/test_verify_ceph_csidriver_runs_on_non_ocs_nodes.py
@@ -5,6 +5,7 @@ from ocs_ci.ocs import constants
 from ocs_ci.framework.pytest_customization.marks import (
     skipif_flexy_deployment,
     skipif_managed_service,
+    skipif_ibm_power,
 )
 from ocs_ci.framework.testlib import tier1, ManageTest
 from ocs_ci.ocs.node import get_worker_nodes_not_in_ocs
@@ -19,6 +20,7 @@ logger = logging.getLogger(__name__)
 @tier1
 @pytest.mark.polarion_id("OCS-2490")
 @pytest.mark.bugzilla("1794389")
+@skipif_ibm_power
 class TestCheckTolerationForCephCsiDriverDs(ManageTest):
     """
     Check toleration for Ceph CSI driver DS on non ocs node
diff --git a/tests/manage/z_cluster/cluster_expansion/test_crashcollector_pod_existence_on_ceph_pods_running_nodes.py b/tests/manage/z_cluster/cluster_expansion/test_crashcollector_pod_existence_on_ceph_pods_running_nodes.py
index fe35c132..f05e49f6 100644
--- a/tests/manage/z_cluster/cluster_expansion/test_crashcollector_pod_existence_on_ceph_pods_running_nodes.py
+++ b/tests/manage/z_cluster/cluster_expansion/test_crashcollector_pod_existence_on_ceph_pods_running_nodes.py
@@ -1,7 +1,11 @@
 import logging
 import pytest

-from ocs_ci.framework.pytest_customization.marks import skipif_managed_service
+from ocs_ci.framework.pytest_customization.marks import (
+    skipif_managed_service,
+    skipif_ibm_power,
+)
+
 from ocs_ci.ocs.node import drain_nodes, schedule_nodes
 from ocs_ci.helpers.helpers import get_failure_domin
 from ocs_ci.framework import config
@@ -34,6 +38,7 @@ logger = logging.getLogger(__name__)
 @skipif_external_mode
 @skipif_managed_service
 @pytest.mark.polarion_id("OCS-2594")
+@skipif_ibm_power
 class TestAddNodeCrashCollector(ManageTest):
     """
     Add node with OCS label and verify crashcollector created on new node
diff --git a/tests/manage/z_cluster/nodes/test_node_replacement_proactive.py b/tests/manage/z_cluster/nodes/test_node_replacement_proactive.py
index c713af24..5acc5bed 100644
--- a/tests/manage/z_cluster/nodes/test_node_replacement_proactive.py
+++ b/tests/manage/z_cluster/nodes/test_node_replacement_proactive.py
@@ -20,6 +20,7 @@ from ocs_ci.framework.pytest_customization.marks import (
     bugzilla,
     skipif_external_mode,
     skipif_ms_consumer,
+    skipif_ibm_power,
 )

 from ocs_ci.helpers.sanity_helpers import Sanity
@@ -157,6 +158,7 @@ def delete_and_create_osd_node(osd_node_name):
 @skipif_managed_service
 @skipif_bmpsi
 @skipif_external_mode
+@skipif_ibm_power
 class TestNodeReplacementWithIO(ManageTest):
     """
     Knip-894 Node replacement proactive with IO
@@ -230,6 +232,7 @@ class TestNodeReplacementWithIO(ManageTest):
 @skipif_bmpsi
 @skipif_external_mode
 @skipif_ms_consumer
+@skipif_ibm_power
 class TestNodeReplacement(ManageTest):
     """
     Knip-894 Node replacement proactive
@@ -272,6 +275,7 @@ class TestNodeReplacement(ManageTest):
 @pytest.mark.polarion_id("OCS-2535")
 @skipif_external_mode
 @skipif_ms_consumer
+@skipif_ibm_power
 class TestNodeReplacementTwice(ManageTest):
     """
     Node replacement twice:
